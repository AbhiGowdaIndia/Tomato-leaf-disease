# -*- coding: utf-8 -*-
"""Tomato leaf disease.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dOfhtqGEmGGw9HFMm86EiITXIKg57DQ1
"""

!pip install tensorflow-gpu

!nvidia-smi

import tensorflow as tf
tf.__version__

tf.keras.__version__

#import Keras packages
from keras.models import Sequential
from keras.layers import Convolution2D
from keras.layers import MaxPooling2D
from keras.layers import Flatten
from keras.layers import Dense
from keras.layers import Dropout
import numpy as np
from keras.utils.vis_utils import plot_model

train_path='/content/drive/MyDrive/Data sets/Tomato Disease/train'
val_path='/content/drive/MyDrive/Data sets/Tomato Disease/val'

#fitting the data set

from keras.preprocessing.image import ImageDataGenerator

train_datagen = ImageDataGenerator(
        rescale=1./255,
        shear_range=0.2,
        zoom_range=0.2,
        horizontal_flip=True)

test_datagen = ImageDataGenerator(rescale=1./255)

training_set = train_datagen.flow_from_directory(
        train_path,
        target_size=(128, 128),
        batch_size=64,
        class_mode='categorical' )

label_map = (training_set.class_indices)
print(label_map)

test_set = test_datagen.flow_from_directory(
        val_path,
        target_size=(128, 128),
        batch_size=64,
        class_mode='categorical')

np.random.seed(1337)
classifier = Sequential()

classifier.add(Convolution2D(32, (3, 3), input_shape = (128, 128, 3), activation = 'relu'))
classifier.add(MaxPooling2D(pool_size = (2, 2)))
classifier.add(Convolution2D(64, (3, 3), activation = 'relu'))
classifier.add(MaxPooling2D(pool_size = (2, 2)))
classifier.add(Convolution2D(128, (3, 3), activation = 'relu'))
classifier.add(MaxPooling2D(pool_size = (2, 2)))
classifier.add(Convolution2D(128, (3, 3), activation = 'relu'))
classifier.add(MaxPooling2D(pool_size = (2, 2)))

classifier.add(Flatten())
#hidden layer
classifier.add(Dense(512, activation = 'relu'))
classifier.add(Dropout(0.5))
#output layer
classifier.add(Dense(10, activation = 'softmax'))

import pydot
plot_model(classifier)

classifier.summary()

classifier.compile(optimizer = 'adam', loss = 'categorical_crossentropy', metrics = ['accuracy'])

classifier.fit_generator(
        training_set,
        steps_per_epoch=20,
        epochs=50,
        validation_data=test_set,
        validation_steps=100)

classifier.save('/content/drive/MyDrive/Data sets/Tomato Disease/models/Tomato_model.h5')

target_dict = dict([(value, key) for key, value in label_map.items()])

from tensorflow.keras.preprocessing import image

img=image.load_img('/content/drive/MyDrive/Data sets/Tomato Disease/val/Tomato___Target_Spot/0a51617c-ecb5-42ce-9d34-300307be3465___Com.G_TgS_FL 0976.JPG',target_size=(128,128))

x=image.img_to_array(img)
x

x.shape

x=x/255
x.shape

import numpy as np
x=np.expand_dims(x,axis=0)
x.shape

pred=classifier.predict(x)
pred

ind=np.argmax(pred)
target_dict[ind]

def predict_diesease(img):
  x=image.img_to_array(img)
  x=x/255
  x=np.expand_dims(x,axis=0)
  pred=classifier.predict(x)
  ind=np.argmax(pred)
  print("Result : {} category".format(target_dict[ind]))

img=image.load_img('/content/drive/MyDrive/Data sets/Tomato Disease/val/Tomato___healthy/01f98912-9627-4ce0-8f0f-e451b7acbb6c___RS_HL 0509.JPG',target_size=(128,128))

predict_diesease(img)